name: CMake-Debug

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}

      #      - name: Test For trialDivision(multithread)
      #        run: ./build/findPrimes 16 0 99999989 primes+TDMT.txt

      - name: Test For eratosthenesSieve(multithread)
        run: ./build/findPrimes 16 1 99999989 primesESMT.txt

      #      - name: Test For eulerSieve(multithread)
      #        run: ./build/findPrimes 16 2 99999989 primesEUSMT.txt

      - name: Test For sundaramSieve(multithread)
        run: ./build/findPrimes 16 3 99999989 primesSSMT.txt

      #      - name: Test For incrementalSieve(multithread)
      #        run: ./build/findPrimes 16 4 99999989 primesISMT.txt

      - name: Test For trialDivision(monothread)
        run: ./build/findPrimes 1 0 99999989 primesTD.txt

      - name: Test For eratosthenesSieve(monothread)
        run: ./build/findPrimes 1 1 99999989 primesES.txt

      - name: Test For eulerSieve(monothread)
        run: ./build/findPrimes 1 2 99999989 primesEUS.txt

      - name: Test For sundaramSieve(monothread)
        run: ./build/findPrimes 1 3 99999989 primesSS.txt

      - name: Test For incrementalSieve(monothread)
        run: ./build/findPrimes 1 4 99999989 primesIS.txt